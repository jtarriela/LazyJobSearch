version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_DB=lazyjobsearch
      - POSTGRES_USER=ljs_user
      - POSTGRES_PASSWORD=ljs_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-pgvector.sql:/docker-entrypoint-initdb.d/init-pgvector.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ljs_user -d lazyjobsearch"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Web scraper service
  scraper:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.scraper
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://ljs_user:ljs_password@postgres:5432/lazyjobsearch
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SCRAPER_HEADLESS=true
    volumes:
      - ../../:/app
      - /dev/shm:/dev/shm  # Selenium needs shared memory
    restart: unless-stopped

  # Resume processing service
  resume-processor:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://ljs_user:ljs_password@postgres:5432/lazyjobsearch
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WORKER_TYPE=resume_processor
    volumes:
      - ../../:/app
    restart: unless-stopped

  # Job description processor
  jd-processor:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://ljs_user:ljs_password@postgres:5432/lazyjobsearch
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WORKER_TYPE=jd_processor
    volumes:
      - ../../:/app
    restart: unless-stopped

  # Matcher service
  matcher:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://ljs_user:ljs_password@postgres:5432/lazyjobsearch
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WORKER_TYPE=matcher
    volumes:
      - ../../:/app
    restart: unless-stopped

  # Optional API service for admin/monitoring
  api:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ljs_user:ljs_password@postgres:5432/lazyjobsearch
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
    volumes:
      - ../../:/app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  default:
    name: lazyjobsearch_network