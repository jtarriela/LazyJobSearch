{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://lazyjobsearch.dev/schemas/portal_template_dsl.schema.json",
  "title": "Portal Template DSL",
  "description": "Schema for defining ATS portal automation templates consumed by the Apply Orchestrator.",
  "type": "object",
  "required": ["start", "steps"],
  "additionalProperties": false,
  "properties": {
    "version": {
      "description": "Template semantic version or integer increment.",
      "type": ["string", "integer"],
      "default": 1
    },
    "meta": {
      "description": "Arbitrary descriptive metadata (author, notes, portal revision).",
      "type": "object",
      "additionalProperties": true
    },
    "start": {
      "description": "Starting navigation instruction.",
      "type": "object",
      "required": ["url"],
      "properties": {
        "url": {"type": "string", "format": "uri-reference"},
        "wait": {"description": "Optional wait milliseconds after load.", "type": "integer", "minimum": 0}
      },
      "additionalProperties": false
    },
    "preconditions": {
      "description": "Assertions that must be true before executing steps.",
      "type": "array",
      "items": {"$ref": "#/definitions/assertion"}
    },
    "environment": {
      "description": "Optional environment hints (e.g., userAgent, viewport).",
      "type": "object",
      "additionalProperties": true
    },
    "steps": {
      "description": "Ordered list of actions to execute.",
      "type": "array",
      "minItems": 1,
      "items": {"$ref": "#/definitions/step"}
    },
    "receipt": {
      "description": "How to locate final submission confirmation.",
      "type": "object",
      "required": ["selector"],
      "properties": {
        "selector": {"type": "string"},
        "attribute": {"type": "string", "description": "Attribute name whose value is the receipt (fallback)."},
        "regex": {"type": "string", "description": "Optional regex to extract ID from textContent/attribute."}
      },
      "additionalProperties": false
    },
    "validate": {
      "description": "Validation probes after each step or at specified checkpoints.",
      "type": "array",
      "items": {"$ref": "#/definitions/validation"}
    },
    "errorRecovery": {
      "description": "Optional recovery strategies keyed by error code or tag.",
      "type": "object",
      "additionalProperties": {"$ref": "#/definitions/recovery"}
    },
    "throttle": {
      "description": "Rate or pacing hints.",
      "type": "object",
      "properties": {
        "betweenStepsMs": {"type": "integer", "minimum": 0},
        "jitterMs": {"type": "integer", "minimum": 0}
      },
      "additionalProperties": false
    }
  },
  "definitions": {
    "step": {
      "type": "object",
      "required": ["action"],
      "properties": {
        "id": {"type": "string", "description": "Semantic label for referencing in recovery or logs."},
        "action": {"type": "string", "enum": [
          "click", "type", "select", "radio", "checkbox", "upload", "wait", "submit", "navigate", "scroll", "script", "next"
        ]},
        "selector": {"type": "string", "description": "CSS or XPath (prefix with // for XPath)."},
        "frame": {"type": "string", "description": "Frame name/index if element inside an iframe."},
        "value": {"description": "Literal value or template (Handlebars-like).", "type": ["string", "number", "boolean"]},
        "file": {"type": "string", "description": "Key into files map when action=upload."},
        "option": {"type": "string", "description": "Explicit option text/value for selects."},
        "waitFor": {"type": "string", "enum": ["network-idle", "dom-stable", "selector", "timeout"], "description": "Post-action wait strategy."},
        "waitSelector": {"type": "string", "description": "Selector to wait for when waitFor=selector."},
        "timeoutMs": {"type": "integer", "minimum": 0},
        "script": {"type": "string", "description": "JS snippet for action=script."},
        "assert": {"type": "array", "items": {"$ref": "#/definitions/assertion"}},
        "skipIf": {"type": "array", "items": {"$ref": "#/definitions/condition"}},
        "retry": {"$ref": "#/definitions/retryPolicy"}
      },
      "additionalProperties": false
    },
    "assertion": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {"type": "string", "enum": ["exists", "visible", "notExists", "textContains", "attributeMatches"]},
        "selector": {"type": "string"},
        "text": {"type": "string"},
        "attribute": {"type": "string"},
        "regex": {"type": "string"}
      },
      "additionalProperties": false
    },
    "validation": {
      "type": "object",
      "required": ["selector", "severity"],
      "properties": {
        "selector": {"type": "string"},
        "severity": {"type": "string", "enum": ["info", "warn", "block"]},
        "message": {"type": "string"},
        "extract": {"type": "string", "description": "Attribute to extract as value (default textContent)."},
        "matchRegex": {"type": "string"}
      },
      "additionalProperties": false
    },
    "recovery": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {"$ref": "#/definitions/step"}
        },
        "maxAttempts": {"type": "integer", "minimum": 1, "default": 1}
      },
      "additionalProperties": false
    },
    "condition": {
      "type": "object",
      "required": ["selector", "predicate"],
      "properties": {
        "selector": {"type": "string"},
        "predicate": {"type": "string", "enum": ["exists", "notExists", "visible", "textContains"]},
        "text": {"type": "string"}
      },
      "additionalProperties": false
    },
    "retryPolicy": {
      "type": "object",
      "properties": {
        "max": {"type": "integer", "minimum": 0, "default": 0},
        "delayMs": {"type": "integer", "minimum": 0, "default": 0},
        "backoffFactor": {"type": "number", "minimum": 1, "default": 1.0}
      },
      "additionalProperties": false
    }
  }
}
